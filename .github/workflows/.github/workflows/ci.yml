name: CI (pytest + flake8)

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"   # match your local version
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          pip install pytest flake8
      - name: Lint
        run: flake8 .
      - name: Test
        run: pytest -q
2) (Optional) Add a minimal flake8 config

# tests/test_imports.py
def test_imports():
    import fastapi, uvicorn, pandas, sklearn  # noqa: F401
    assert True
python
Copy
Edit
# tests/test_health.py
from fastapi.testclient import TestClient
from main import app  # or from app.main import app
client = TestClient(app)

def test_root_status():
    r = client.get("/")
    assert r.status_code in (200, 404)  # set to 200 if you implement /
python
Copy
Edit
# tests/test_predict_contract.py
from fastapi.testclient import TestClient
from main import app  # or from app.main import app
client = TestClient(app)

def test_predict_contract():
    r = client.post("/predict", json={"feature_1": 1, "feature_2": 2})  # adjust schema
    assert r.status_code == 200
    assert "prediction" in r.json()
